{
  "$schema": "./node_modules/@angular/cli/lib/config/schema.json",
  "version": 1,
  "newProjectRoot": "projects",
  "projects": {
    "gb3-frontend": {
      "projectType": "application",
      "schematics": {
        "@schematics/angular:component": {
          "style": "scss",
          "skipTests": true
        }
      },
      "root": "",
      "sourceRoot": "src",
      "prefix": "",
      "i18n": {
        "sourceLocale": "de-CH"
      },
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:application",
          "options": {
            "outputPath": "dist",
            "index": "src/index.html",
            "browser": "src/main.ts",
            "polyfills": ["src/polyfills.ts", "@angular/localize/init"],
            "tsConfig": "tsconfig.app.json",
            "inlineStyleLanguage": "scss",
            "assets": ["src/favicon.ico", "src/assets"],
            "styles": ["./node_modules/@angular/material/prebuilt-themes/indigo-pink.css", "src/styles.scss"],
            "stylePreprocessorOptions": {
              "includePaths": ["src/styles", "node_modules/@material"]
            },
            "scripts": [],
            "allowedCommonJsDependencies": ["dayjs"]
          },
          "configurations": {
            "production": {
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "500kb",
                  "maximumError": "6mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "6kb",
                  "maximumError": "12kb"
                }
              ],
              "fileReplacements": [
                {
                  "replace": "src/environments/environment.ts",
                  "with": "src/environments/environment.prod.ts"
                },
                {
                  "replace": "src/app/shared/configs/runtime.config.ts",
                  "with": "src/app/shared/configs/runtime.prod.config.ts"
                }
              ],
              "outputHashing": "all"
            },
            "production-staging": {
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "500kb",
                  "maximumError": "6mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "6kb",
                  "maximumError": "12kb"
                }
              ],
              "fileReplacements": [
                {
                  "replace": "src/environments/environment.ts",
                  "with": "src/environments/environment.staging.ts"
                },
                {
                  "replace": "src/app/shared/configs/runtime.config.ts",
                  "with": "src/app/shared/configs/runtime.staging.config.ts"
                }
              ],
              "outputHashing": "all"
            },
            "production-staging-using-productive-gb2-backend": {
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "500kb",
                  "maximumError": "6mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "6kb",
                  "maximumError": "12kb"
                }
              ],
              "fileReplacements": [
                {
                  "replace": "src/environments/environment.ts",
                  "with": "src/environments/environment.prod.ts"
                },
                {
                  "replace": "src/app/shared/configs/runtime.config.ts",
                  "with": "src/app/shared/configs/runtime.staging-using-productive-gb2-backend.config.ts"
                }
              ],
              "outputHashing": "all"
            },
            "production-uat": {
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "500kb",
                  "maximumError": "6mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "6kb",
                  "maximumError": "12kb"
                }
              ],
              "fileReplacements": [
                {
                  "replace": "src/environments/environment.ts",
                  "with": "src/environments/environment.uat.ts"
                },
                {
                  "replace": "src/app/shared/configs/runtime.config.ts",
                  "with": "src/app/shared/configs/runtime.uat.config.ts"
                }
              ],
              "outputHashing": "all"
            },
            "production-dev-ebp": {
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "500kb",
                  "maximumError": "6mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "6kb",
                  "maximumError": "12kb"
                }
              ],
              "fileReplacements": [
                {
                  "replace": "src/environments/environment.ts",
                  "with": "src/environments/environment.prod.ts"
                },
                {
                  "replace": "src/app/shared/configs/runtime.config.ts",
                  "with": "src/app/shared/configs/runtime.dev-ebp.config.ts"
                }
              ],
              "outputHashing": "all"
            },
            "development": {
              "optimization": false,
              "extractLicenses": false,
              "sourceMap": true,
              "namedChunks": true
            },
            "development-local-gb2": {
              "optimization": false,
              "extractLicenses": false,
              "sourceMap": true,
              "namedChunks": true,
              "fileReplacements": [
                {
                  "replace": "src/environments/environment.ts",
                  "with": "src/environments/environment.local-gb2.ts"
                },
                {
                  "replace": "src/app/shared/configs/runtime.config.ts",
                  "with": "src/app/shared/configs/runtime.local-gb2.config.ts"
                }
              ]
            }
          },
          "defaultConfiguration": "development"
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
          },
          "configurations": {
            "production": {
              "buildTarget": "gb3-frontend:build:production"
            },
            "development": {
              "buildTarget": "gb3-frontend:build:development"
            },
            "development-local-gb2": {
              "buildTarget": "gb3-frontend:build:development-local-gb2"
            }
          },
          "defaultConfiguration": "development"
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "buildTarget": "gb3-frontend:build"
          }
        },
        "test": {
          "builder": "@angular-devkit/build-angular:karma",
          "options": {
            "main": "src/test.ts",
            "polyfills": ["src/polyfills.ts", "@angular/localize/init"],
            "tsConfig": "tsconfig.spec.json",
            "karmaConfig": "karma.conf.js",
            "inlineStyleLanguage": "scss",
            "assets": ["src/favicon.ico", "src/assets"],
            "styles": ["./node_modules/@angular/material/prebuilt-themes/indigo-pink.css", "src/styles.scss"],
            "stylePreprocessorOptions": {
              "includePaths": ["src/styles"]
            },
            "scripts": [],
            "codeCoverage": true,
            "codeCoverageExclude": [
              "**/main.ts",
              "**/configs/*.config.ts",
              "**/*.module.ts",
              "**/*.mock.ts",
              "**/*.stub.ts",
              "**/app/testing/**",
              "**/*.component.ts",
              "**/environments/environment*.ts"
            ]
          },
          "configurations": {
            "test": {
              "fileReplacements": [
                {
                  "replace": "src/environments/environment.ts",
                  "with": "src/environments/environment.prod.ts"
                },
                {
                  "replace": "src/app/shared/configs/runtime.config.ts",
                  "with": "src/app/shared/configs/runtime.testing.config.ts"
                }
              ]
            }
          },
          "defaultConfiguration": "test"
        }
      }
    }
  },
  "cli": {
    "analytics": false,
    "schematicCollections": ["@ngrx/schematics"]
  },
  "schematics": {
    "@angular-eslint/schematics:application": {
      "setParserOptionsProject": true
    },
    "@angular-eslint/schematics:library": {
      "setParserOptionsProject": true
    }
  }
}
